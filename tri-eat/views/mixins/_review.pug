mixin review(review)
  .review__header
    .review__header--author
      .review__header--author--info
        img.avatar(src=review.author.gravatar)
        p= review.author.name
        form.userAverage(action=`/api/reviewer/${review.author._id}/avg` method="POST")
          button.review__header--author--info--avgBtn(name="avg" type="submit")
            != h.icon('bar-graph')
      .review__header--author--avg
    .review__header--stars
      each category in ['Food', 'Service', 'Ambiance']
        .review__header--stars--category
          p= `${category} ` + `★`.repeat(review.rating[category.toLowerCase()]) + `✩`.repeat(5 - review.rating[category.toLowerCase()])
    time.review__header--time(datetime=review.created)= h.moment(review.created).fromNow()
  .review__body
    .review__body--text 
      p= review.text
    if review.photo
      .review__body--photo
        img(src=`/uploads/reviews/${review.photo}`)
    .review__body--control
      .review__body--control--upvote
        form.upvote(action=`/api/reviews/${review._id}/upvote` method="POST")
          - const upvotes = user && user.upvotes.map(obj => obj.toString());
          - const upvoteClass = user && upvotes.includes(review._id.toString())? 'upvote__button--upvoted' : '';
          button.upvote__button(type="submit" class=upvoteClass name="upvote" disabled=(!user))
            != h.icon('heart')
        span= review.upvoteUsers.length
      if (user && (review.author._id.equals(user._id) || user.isAdmin) )
        .review__body--control--edit
          a(href=`/store/${review.store}/reviews/${review.id}/edit`)
            != h.icon('pencil')
